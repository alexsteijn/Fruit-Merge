INIT = 0
GAME = 1
INSTRUCOES = 2
QUIT = 3

VERD = (160, 231, 190)
VERM = (205, 44, 65)
AZUL = (139, 165, 235)
AMAR = (204, 173, 26)
LISTA_CORES=[VERM, AMAR, VERD, AZUL]


# Importando as bibliotecas usadas.
import pygame
import random
from os import path

# Estabelece a pasta que contem as imagens.
img_dir = path.join(path.dirname(__file__), 'Imagens')
fnt_dir = path.join(path.dirname(__file__), 'Fonte')

# informaçoes gerais do jogo.
WIDTH = 1200 # Largura da tela
HEIGHT = 700 # Altura da tela
FPS = 30 # Frames por segundo

# Define algumas variáveis com as cores básicas
BRANCO = (255, 255, 255)
PRETO = (0, 0, 0)
VERMELHO = (255, 0, 0)
VERDE = (0, 255, 0)
AZUL1 = (0, 0, 255)
AMARELO = (255, 255, 0)

#criando a classe dos frutinhas
class Pontinhos(pygame.sprite.Sprite):
    
    #Construtor da classe
    def __init__(self, x, y):
        arquivo_cores = ["ponto_vermelho.jpg", "ponto_amarelo.jpg", "ponto_verde.jpg", "ponto_azul.jpg"]
        
        # Construtor da classe pai (Sprite).
        pygame.sprite.Sprite.__init__(self)
        
        # Carregando a foto de fundo.
        self.cor = random.randint(0,3)
        player_img = pygame.image.load(path.join(img_dir, arquivo_cores[self.cor])).convert()

        self.image = player_img
        
        # Botando imagem em escala.
        self.image = pygame.transform.scale(player_img, (60, 60))
        
        # Deixando transparente.
        self.image.set_colorkey(BRANCO)
        
        # Detalhes sobre o posicionamento.
        self.rect = self.image.get_rect()
        
        # Centraliza embaixo da tela.
        self.rect.x = x
        self.rect.y = y
        
        # Velocidade de movimento
        self.speedx = 0
        
    # Metodo que atualiza posição
    def update(self):
        self.rect.x += self.speedx
        # Mantem dentro da tela
        if self.rect.right > WIDTH:
            self.rect.right = WIDTH
        if self.rect.left < 0:
            self.rect.left = 0
        

# Inicialização do Pygame.
pygame.init()
pygame.mixer.init()

# Tamanho da tela.
screen = pygame.display.set_mode((WIDTH, HEIGHT))

# Nome do jogo
pygame.display.set_caption("Pygame")

def jogo(screen):
    jogadas_maximas = []
    jogadas_maximas.append({"jogada": 5, "cor" :[0, 5, 0, 0]})
    jogadas_maximas.append({"jogada": 5, "cor" :[2, 0, 0, 2]})
    jogadas_maximas.append({"jogada": 15, "cor" :[2, 2, 2, 0]})
    jogadas_maximas.append({"jogada": 10, "cor" :[2, 2, 2, 2]})
    jogadas_maximas.append({"jogada": 5, "cor" :[2, 0, 0, 0]})

    for conta_fase, params in enumerate(jogadas_maximas):
        res = qual_fase(screen, conta_fase + 1)
        if res == QUIT:
            break
        
        res = level(screen, params["jogada"], params["cor"])
        if res == QUIT:
            break
        
    return QUIT

def level(screen, qtd_jogadas, cores):
    pontuacao = [0, 0, 0, 0]
    
    score_fonte = pygame.font.Font(path.join(fnt_dir, "DK Lemon Yellow Sun.otf"), 28)
    # Variável para o ajuste de velocidade
    clock = pygame.time.Clock()
    
    
    # Carrega o fundo do jogo
    inicio = pygame.image.load(path.join(img_dir, 'tela_inicial.jpg')).convert()
    inicio = pygame.transform.scale(inicio,(WIDTH, HEIGHT))
    
    background = pygame.image.load(path.join(img_dir, 'fundo.png')).convert()
    background = pygame.transform.scale(background,(WIDTH, HEIGHT))
    background_rect = background.get_rect()
    
    #Carrega imagem quadrado
    quadrado = pygame.image.load(path.join(img_dir, 'quadrado.png')).convert()
    quadrado.set_colorkey(BRANCO)
    quadrado = pygame.transform.scale(quadrado,(600, 600))
    
    
    # Cria um grupo de sprites e adiciona a nave.
    all_sprites = pygame.sprite.Group()
    
    x_init = 345 
    y_init = HEIGHT-7*79
    
    x = x_init
    y = y_init
    tamanho_bolinha = 76
    tabuleiro_bolinha = []
    for e in range(7):
        linha_bolinha = []
        for i in range(7):
            a1 = Pontinhos(x, y)
            all_sprites.add(a1)
            linha_bolinha.append(a1)
            x += tamanho_bolinha
        tabuleiro_bolinha.append(linha_bolinha)
        y += tamanho_bolinha
        x = x_init
        
    
    lista_pontinhos = []
    cor = None
    
    qnt_jogadas = qtd_jogadas
    jogadas_amar = 0
    
    # Loop principal.
    running = True
    while running:
        
        # Ajusta a velocidade do jogo.
        clock.tick(FPS)
        
        # Processa os eventos (mouse, teclado, botão, etc).
        for event in pygame.event.get():
          
